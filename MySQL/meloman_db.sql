-- MySQL Script generated by MySQL Workbench
-- 09/15/16 22:13:32
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema meloman_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema meloman_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `meloman_db` DEFAULT CHARACTER SET utf8 ;
USE `meloman_db` ;

-- -----------------------------------------------------
-- Table `meloman_db`.`role`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meloman_db`.`role` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `role_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meloman_db`.`address`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meloman_db`.`address` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `country` VARCHAR(45) NOT NULL,
  `street` VARCHAR(45) NOT NULL,
  `zip_code` INT NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meloman_db`.`users`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meloman_db`.`users` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `login` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `first_name` VARCHAR(45) NOT NULL,
  `last_name` VARCHAR(45) NOT NULL,
  `age` INT NOT NULL,
  `role_id` INT NOT NULL,
  `address_id` INT NOT NULL,
  PRIMARY KEY (`id`, `address_id`),
  UNIQUE INDEX `login_UNIQUE` (`login` ASC),
  INDEX `fk_users_role_idx` (`role_id` ASC),
  INDEX `fk_users_address1_idx` (`address_id` ASC),
  CONSTRAINT `fk_users_role`
    FOREIGN KEY (`role_id`)
    REFERENCES `meloman_db`.`role` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_address1`
    FOREIGN KEY (`address_id`)
    REFERENCES `meloman_db`.`address` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meloman_db`.`music_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meloman_db`.`music_type` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `type_name` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `meloman_db`.`users_has_music_type`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `meloman_db`.`users_has_music_type` (
  `users_id` INT NOT NULL,
  `music_type_id` INT NOT NULL,
  PRIMARY KEY (`users_id`, `music_type_id`),
  INDEX `fk_users_has_music_type_music_type1_idx` (`music_type_id` ASC),
  INDEX `fk_users_has_music_type_users1_idx` (`users_id` ASC),
  CONSTRAINT `fk_users_has_music_type_users1`
    FOREIGN KEY (`users_id`)
    REFERENCES `meloman_db`.`users` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_users_has_music_type_music_type1`
    FOREIGN KEY (`music_type_id`)
    REFERENCES `meloman_db`.`music_type` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `meloman_db`.`role`
-- -----------------------------------------------------
START TRANSACTION;
USE `meloman_db`;
INSERT INTO `meloman_db`.`role` (`id`, `role_name`) VALUES (1, 'Admin');
INSERT INTO `meloman_db`.`role` (`id`, `role_name`) VALUES (2, 'Moderator');
INSERT INTO `meloman_db`.`role` (`id`, `role_name`) VALUES (3, 'User');

COMMIT;


-- -----------------------------------------------------
-- Data for table `meloman_db`.`address`
-- -----------------------------------------------------
START TRANSACTION;
USE `meloman_db`;
INSERT INTO `meloman_db`.`address` (`id`, `country`, `street`, `zip_code`) VALUES (1, 'Украина', 'Кирова 5', 610093);
INSERT INTO `meloman_db`.`address` (`id`, `country`, `street`, `zip_code`) VALUES (2, 'Россия', 'Жукова 3/4', 851022);
INSERT INTO `meloman_db`.`address` (`id`, `country`, `street`, `zip_code`) VALUES (3, 'Беларусь', 'Гагарина 50б', 755001);

COMMIT;


-- -----------------------------------------------------
-- Data for table `meloman_db`.`users`
-- -----------------------------------------------------
START TRANSACTION;
USE `meloman_db`;
INSERT INTO `meloman_db`.`users` (`id`, `login`, `password`, `first_name`, `last_name`, `age`, `role_id`, `address_id`) VALUES (1, 'admin', 'admin', 'Вася', 'Пупкин', 25, 1, 1);
INSERT INTO `meloman_db`.`users` (`id`, `login`, `password`, `first_name`, `last_name`, `age`, `role_id`, `address_id`) VALUES (2, 'android', 'qwerty', 'Костя', 'Костин', 18, 3, 2);
INSERT INTO `meloman_db`.`users` (`id`, `login`, `password`, `first_name`, `last_name`, `age`, `role_id`, `address_id`) VALUES (3, 'bulba', '2525qw', 'Александр', 'Бульба', 31, 2, 3);

COMMIT;


-- -----------------------------------------------------
-- Data for table `meloman_db`.`music_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `meloman_db`;
INSERT INTO `meloman_db`.`music_type` (`id`, `type_name`) VALUES (1, 'ROCK');
INSERT INTO `meloman_db`.`music_type` (`id`, `type_name`) VALUES (2, 'RAP');
INSERT INTO `meloman_db`.`music_type` (`id`, `type_name`) VALUES (3, 'HIP-HOP');

COMMIT;


-- -----------------------------------------------------
-- Data for table `meloman_db`.`users_has_music_type`
-- -----------------------------------------------------
START TRANSACTION;
USE `meloman_db`;
INSERT INTO `meloman_db`.`users_has_music_type` (`users_id`, `music_type_id`) VALUES (1, 1);
INSERT INTO `meloman_db`.`users_has_music_type` (`users_id`, `music_type_id`) VALUES (1, 2);
INSERT INTO `meloman_db`.`users_has_music_type` (`users_id`, `music_type_id`) VALUES (1, 3);
INSERT INTO `meloman_db`.`users_has_music_type` (`users_id`, `music_type_id`) VALUES (2, 3);
INSERT INTO `meloman_db`.`users_has_music_type` (`users_id`, `music_type_id`) VALUES (3, 1);
INSERT INTO `meloman_db`.`users_has_music_type` (`users_id`, `music_type_id`) VALUES (3, 2);

COMMIT;

